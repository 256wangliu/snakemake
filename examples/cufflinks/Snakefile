# python syntax

TRACK   = "hg19.gtf" # should be fetched from the cufflinks page since special fields are expected
REF     = "hg19.fa"

TRACK   = "/vol/ref/homo-sapiens/Ensembl/GRCh37/Annotation/Genes/genes.gtf"
REF     = "/vol/ref/homo-sapiens/Ensembl/GRCh37/Sequence/WholeGenomeFasta/genome.fa"

CLASS1  = "101 102".split()
CLASS2  = "103 104".split()
SAMPLES = CLASS1 + CLASS2

def mapped(samples):
	return ("mapped/{sample}.bam".format(sample=sample) for sample in samples)

rule all:
	input: "diffexp/isoform_exp.diff", "assembly/comparison"

rule assembly:
	input: "mapped/{sample}.bam"
	output: "assembly/{sample}/transcripts.gtf", dir="assembly/{sample}"
	threads: 4
	shell: "cufflinks --num-threads {threads} -o {output.dir} --frag-bias-correct {REF} {input}"

rule compose_merge:
	input: "assembly/{sample}/transcripts.gtf".format(sample=sample) for sample in SAMPLES
	output: txt="assembly/assemblies.txt"
	run:
		with open(output.txt, "w") as out:
			out.write("\n".join(input))

rule merge_assemblies:
	input: "assembly/assemblies.txt"
	output: "assembly/merged/merged.gtf", dir="assembly/merged"
	shell: "cuffmerge -o {output.dir} -s {REF} {input}"

rule compare_assemblies:
	input: "assembly/merged/merged.gtf"
	output: "assembly/comparison/all.stats", dir="assembly/comparison"
	shell: "cuffcompare -o {output.dir}all -s {REF} -r {TRACK} {input}"


rule diffexp:
	input: mapped(SAMPLES), gtf="assembly/merged/merged.gtf"
	output: "diffexp/gene_exp.diff", "diffexp/isoform_exp.diff"
	threads: 8
	run:
		cl1 = ",".join(mapped(CLASS1))
		cl2 = ",".join(mapped(CLASS2))
		shell("cuffdiff --num-threads {threads} {gtf} {cl1} {cl2}")
